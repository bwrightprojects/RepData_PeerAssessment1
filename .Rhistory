data(irus)
data(iris)
?iris
mean(iris[iris$Species == "virginica",]$Sepal.Length)
iris
help(lapply)
lapply(iris, mean)
lapply(iris, mean, simplify = TRUE, use.name=TRUE)
apply(iris,1,mean)
apply(iris,2,mean)
lapply(iris, mean, simplify = TRUE, use.name=TRUE, is.na=FALSE)
lapply(iris, mean, simplify = TRUE, use.name=TRUE, unique=TRUE)
lapply(iris, mean, !is.na(iris),simplify = TRUE, use.name=TRUE)
lapply(iris, mean, !is.na(iris),simplify = TRUE, use.name=TRUE)
?mean
lapply(iris, mean na.rm=TRUE,simplify = TRUE, use.name=TRUE)
lapply(iris, mean, na.rm=TRUE,simplify = TRUE, use.name=TRUE)
iris
lapply(iris, mean, na.rm=TRUE,iris[iris$Species == "virginica",]$Sepal.Length,simplify = TRUE, use.name=TRUE)
lapply(iris, mean, iris[iris$Species == "virginica",]$Sepal.Length,simplify = TRUE, use.name=TRUE)
lapply(iris, mean, iris[iris$Species == "virginica",]$Sepal.Length)
lapply(iris, mean,  iris[iris$Species == "virginica",]$Sepal.Length,trim = 0.10)
lapply(iris, mean,  iris[iris$Species == "virginica",]$Sepal.Length,trim = 0.10, simplify=true)
lapply(iris, mean,  iris[iris$Species == "virginica",]$Sepal.Length,trim = 0.10, simplify=true)
ls()
lapply(iris, mean,  iris[iris$Species == "virginica",],trim = 0.10, simplify=true)
lapply(iris[iris$Species == "virginica",],mean,trim = 0.10, simplify=true)
lapply(iris[iris$Species == "virginica",],mean,trim = 0.00, simplify=true)
rowMeans(iris[,1:4])
apply(iris[,1:4],2,mean)
apply(iris,2,mean)
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
lapply(iris[iris$Species == "virginica",],mean,trim = 0.00, simplify=true)
data(mtcars)
?mtcars
tapply(mtcars$mpg,mtcars$cyl,mean)
split(mtcars,mtcars$cyl)
lapply(mtcars,mean)
mean(mtcars$mpg,mtcars$cyl)
tapply(mtcars$mpg,mtcars$cyl,mean)
split(mtcars,mtcars$cyl)
tapply(mtcars$hp,mtcars$cyl,mean)
lapply(mtcars,mean)
tapply(mtcars,mtcars$hp)
lapply(mtcars,mtcars$hp)
lapply(mtcars,mtcars$hp,avg)
lapply(mtcars,avg)
?avg
?average
lapply(mtcars,mean)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],2,mean)
lapply(iris[iris$Species == "virginica",],mean, simplify=true)
lapply(iris[iris$Species == "virginica",],mean,, simplify=true)
?mean
lapply(iris[iris$Species == "virginica",],mean,na.rm=TRUE, simplify=true)
lapply(mtcars[cyl == "8",],mean,na.rm=TRUE, simplify=true)
lapply(mtcars[mtcars$cyl == "8",],mean,na.rm=TRUE, simplify=true)
lapply(mtcars[mtcars$cyl == "8",]$hp,mean,na.rm=TRUE, simplify=true)
lapply(mtcars[mtcars$cyl == "8",]$hp,mean,na.rm=TRUE, simplify=false)
lapply(mtcars[mtcars$cyl == "8",],mean,na.rm=TRUE, simplify=false)
lapply(mtcars[mtcars$cyl == "8",],mean,na.rm=TRUE, simplify=false)
debug(ls)
ls(0)
continue
library(ggplot2)
exit
clear
library(ggplot2)
library(lattice)
clear
install.packages(c("boot", "codetools", "jsonlite", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "mime", "Rcpp"))
qplot(totalSteps,
geom="histogram",
binwidth = 0.5,
main = "Histogram for total number of steps taken each day",
xlab = "steps",
fill=I("blue"),
col=I("red"),
alpha=I(.2),
xlim=c(20,50))
library(ggplot2)
qplot(totalSteps,
geom="histogram",
binwidth = 0.5,
main = "Histogram for total number of steps taken each day",
xlab = "steps",
fill=I("blue"),
col=I("red"),
alpha=I(.2),
xlim=c(20,50))
totalSteps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
data <- read.csv("activity.csv")
getwd()
setwd("./Documents/ReproResearch/Project1")
getwd()
data <- read.csv("activity.csv")
totalSteps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
qplot(totalSteps,
geom="histogram",
binwidth = 0.5,
main = "Histogram for total number of steps taken each day",
xlab = "steps",
fill=I("blue"),
col=I("red"),
alpha=I(.2),
xlim=c(20,50))
qplot(totalSteps,
geom="histogram",
binwidth = 0.5,
main = "Histogram for total number of steps taken each day",
xlab = "steps",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
qplot(totalSteps,
geom="histogram",
binwidth = 1.5,
main = "Histogram for total number of steps taken each day",
xlab = "steps",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
qplot(totalSteps,
geom="histogram",
binwidth = 0.5,
main = "Histogram for total number of steps taken each day")
qplot(totalSteps,
geom="histogram",
binwidth = 1000,
main = "Histogram for total number of steps taken each day")
ggplot(data, aes(date, steps)) +
geom_bar(stat = "identity", colour = "steelblue", fill = "steelblue", width = 0.7) +
facet_grid(. ~ month, scales = "free") +
labs(title = "Histogram of Total Number of Steps Taken Each Day", x = "Date", y = "Total number of steps")
qplot(totalSteps, binwidth=1000, xlab="total number of steps taken each day")
qplot(totalSteps, binwidth=1000, main="Histogram of total number of steps taken each day",xlab="Number of Steps")
qplot(totalSteps,
binwidth=1000,
main="Histogram of total number of steps taken each day",
xlab="Number of Steps",
fill=I("blue"),
col=I("red"))
qplot(totalSteps,
binwidth=1000,
main="Histogram of total number of steps taken each day",
xlab="Number of Steps",
fill=I("steelblue"),
col=I("red"))
qplot(totalSteps,
binwidth=1000,
main="Histogram of total number of steps taken each day",
xlab="Number of Steps",
fill=I("steelblue"),
col=I("blue"))
mean(totalSteps, na.rm=TRUE)
median(totalSteps, na.rm=TRUE)
averages <- aggregate(x=list(steps=data$steps),
by=list(interval=data$interval),
FUN=mean,
na.rm=TRUE)
plot(averages$interval,
averages$steps,
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="green" ,
lwd=2)
plot(averages$interval,
averages$steps,
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2)
hist(totalSteps)
hist(totalSteps,
col=("steelblue"))
qplot(totalSteps,
binwidth=1000,
main="Histogram of total number of steps taken each day",
xlab="Number of Steps",
fill=I("steelblue"),
col=I("blue"))
hist(totalSteps,
col=("steelblue"))
hist(totalSteps,
breaks = 2,
col=("steelblue"))
hist(totalSteps,
breaks = 12,
col=("steelblue"))
hist(totalSteps,
breaks = 12,
col=("steelblue"),
border=("blue"))
qplot(totalSteps,
binwidth=1000,
main="Histogram of total number of steps taken each day",
xlab="Number of Steps",
fill=I("steelblue"),
col=I("blue"))
hist(totalSteps,
breaks = 12,
col=("steelblue"),
border=("blue"))
hist(totalSteps,
breaks = 100,
col=("steelblue"),
border=("blue"))
hist(totalSteps,
breaks = 50,
col=("steelblue"),
border=("blue"))
hist(totalSteps,
breaks = 40,
col=("steelblue"),
border=("blue"))
hist(totalSteps,
breaks = 25,
col=("steelblue"),
border=("blue"))
head(totalSteps)
hist(totalSteps,
breaks = totalSteps$date,
col=("steelblue"),
border=("blue"))
hist(totalSteps,
breaks = totalSteps,
col=("steelblue"),
border=("blue"))
hist(totalSteps,
breaks = 1,
col=("steelblue"),
border=("blue"))
hist(totalSteps,
breaks = totalSteps:1,
col=("steelblue"),
border=("blue"))
data$month <- as.numeric(format(data$date, "%m"))
noNA <- na.omit(data)
rownames(noNA) <- 1:nrow(noNA)
head(noNA)
hist(noNA,
breaks = noNA$date,
col=("steelblue"),
border=("blue"))
hist(noNA,
breaks = 25,
col=("steelblue"),
border=("blue"))
hist(totalSteps,
breaks = 25,
col=("steelblue"),
border=("blue"))
hist(totalSteps,
breaks = days,
col=("steelblue"),
border=("blue"))
hist(totalSteps,
breaks = "days",
col=("steelblue"),
border=("blue"))
qplot(totalSteps,
binwidth=1000,
main="Histogram of total number of steps taken each day",
xlab="Number of Steps",
fill=I("steelblue"),
col=I("blue"))
hist(totalSteps,
breaks = 25,
col=("steelblue"),
border=("blue"))
averages[which.max(averages$steps),]
missing <- is.na(data$steps)
table(missing)
sum(is.na(data))
print(xtable(sum(is.na(data))), type = "html", include.rownames = FALSE)
install.packages("xtable")
print(xtable(sum(is.na(data))), type = "html", include.rownames = FALSE)
library("xtable")
print(xtable(sum(is.na(data))), type = "html", include.rownames = FALSE)
dt <- dt[, `:=`(isStepsMissing, is.na(steps))]
tab <- dt[, .N, isStepsMissing]
print(xtable(tab), type = "html", include.rownames = FALSE)
dt <- dt[, `:=`(isStepsMissing, is.na(steps))]
tab <- dt[, .N, isStepsMissing]
print(xtable(tab), type = "html", include.rownames = FALSE)
missing <- is.na(data$steps)
# How many missing
table(missing)
print(xtable(missing), type = "html", include.rownames = FALSE)
missing <- is.na(data$steps)
# How many missing
table(missing)
missing <- dt[,`:=`(isMissing,is.na(data$steps))]
missing <- dt[,(isMissing,is.na(data$steps))]
missing <- dt[,':='(isMissing,is.na(data$steps))]
missing <- dt[is.na(data$steps)]
missing <- dt[,is.na(data$steps)]
missing<-sum(is.na(data))
print(xtable(missing)), type = "html", include.rownames = FALSE)
table(missing)
print(xtable(table(missing)), type = "html", include.rownames = FALSE)
missing <- dt[,is.na(data$steps)]
missing<-table(sum(is.na(data)))
print(xtable(table(missing)), type = "html", include.rownames = FALSE)
fixedData <- data
head(fixedData)
for (i in 1:nrow(fixedData)) {
if (is.na(fixedData$steps[i])) {
fixedData$steps[i] <- avgSteps[which(fixedData$interval[i] == avgSteps$interval), ]$meanOfSteps
}
}
for (i in 1:nrow(fixedData)) {
if (is.na(fixedData$steps[i])) {
fixedData$steps[i] <- avgerages[which(fixedData$interval[i] == averages$interval), ]$meanOfSteps
}
}
for (i in 1:nrow(fixedData)) {
if (is.na(fixedData$steps[i])) {
fixedData$steps[i] <- averages[which(fixedData$interval[i] == averages$interval), ]$meanOfSteps
}
}
head(averages)
names(averages)[2] <- "meanOfSteps"
head(averages)
for (i in 1:nrow(fixedData)) {
if (is.na(fixedData$steps[i])) {
fixedData$steps[i] <- averages[which(fixedData$interval[i] == averages$interval), ]$meanOfSteps
}
}
head(newData)
head(fixedData)
totalSteps <- tapply(fixedData$steps, fixedData$date, FUN=sum)
qplot(totalSteps, binwidth=1000, xlab="total number of steps taken each day")
qplot(totalSteps,
binwidth=1000,
main="Histogram of total number of steps taken each day",
xlab="Number of Steps",
fill=I("steelblue"),
col=I("blue"))
head(fixedData)
sum(is.na(fixedData))
newTotalSteps <- aggregate(newData$steps,
list(Date = newData$date),
FUN = "sum")$x
newTotalSteps <- aggregate(fixedData$steps,
list(Date = fixedData$date),
FUN = "sum")$x
head(newTotalSteps)
newTotalSteps
totalSteps
totalStepsFixed <- tapply(fixedData$steps, fixedData$date, FUN=sum)
qplot(totalStepsFixed,
binwidth=1000,
main="Histogram of total number of steps taken each day",
xlab="Number of Steps",
fill=I("steelblue"),
col=I("blue"))
mean(totalStepsFixed)
totalSteps <- tapply(data$steps, data$date, FUN=sum, na.rm=TRUE)
mean(totalSteps)
median(totalSteps)
median(totalStepsFixed)
mean(totalStepsFixed)-mean(totalSteps)
median(totalStepsFixed) - median(totalSteps)
levels(fixedData$weekdays) <- list(weekday = c("Monday", "Tuesday",
"Wednesday",
"Thursday", "Friday"),
weekend = c("Saturday", "Sunday"))
fixedData$weekdays <- factor(format(fixedData$date, "%A"))
fixedData$weekdays <- factor(format(as.date(fixedData$date), "%A"))
fixedData$weekdays <- factor(format(as.Date(fixedData$date), "%A"))
levels(newData$weekdays)
levels(fixedData$weekdays)
?levels
levels(fixedData$weekdays) <- list(weekday = c("Monday", "Tuesday",
"Wednesday",
"Thursday", "Friday"),
weekend = c("Saturday", "Sunday"))
levels(fixedData$weekdays)
table(fixedData$weekdays)
print(xtable(table(fixedData$weekdays)), type = "html", include.rownames = FALSE)
avgSteps <- aggregate(fixedData$steps,
list(interval = as.numeric(as.character(fixedData$interval)),
weekdays = fixedData$weekdays),
FUN = "mean")
names(avgSteps)[3] <- "meanOfSteps"
library(lattice)
xyplot(avgSteps$meanOfSteps ~ avgSteps$interval | avgSteps$weekdays,
layout = c(1, 2), type = "l",
xlab = "Interval", ylab = "Number of steps")
xyplot(avgSteps$meanOfSteps ~ avgSteps$interval | avgSteps$weekdays,
layout = c(1, 2), type = "l",
xlab = "5-min Interval", ylab = "Number of steps")
plot(avgSteps$meanOfSteps,
avgSteps$interval,
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2)
par(mfrow=c(2,1))
plot(avgSteps$meanOfSteps,
avgSteps$interval,
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2)
plot(avgSteps$meanOfSteps[avgSteps$weekdsay=='weekday'],
avgSteps$interval,
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2)
par(mfrow=c(1,2))
plot(avgSteps$meanOfSteps[avgSteps$weekdsay=='weekday'],
avgSteps$interval,
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2)
plot(avgSteps$meanOfSteps[avgSteps$weekdsays=='weekday'],
avgSteps$interval,
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2)
plot(avgSteps$meanOfSteps,
avgSteps$interval,
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2)
plot(avgSteps$interval,
avgSteps$meanOfSteps,
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2)
par(mfrow=c(2,1))
plot(avgSteps$interval,
avgSteps$meanOfSteps,
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2)
plot(avgSteps$interval,
avgSteps$meanOfSteps[avgSteps$weekdays=="weekday"],
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2)
head(fixedData)
tail(fixedData)
with(avgSteps$weekdays=="weekday",
plot(avgSteps$interval,
avgSteps$meanOfSteps[avgSteps$weekdays=="weekday"],
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2))
with(avgSteps$weekdays=="weekday",
plot(avgSteps$interval,
avgSteps$meanOfSteps,
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2))
with(avgSteps$weekdays=="weekday",
plot(avgSteps$interval,
avgSteps$meanOfSteps,
type="l",
xlab= "5-minute interval",
ylab= "average number of steps taken",
col="steelblue" ,
lwd=2))
xyplot(avgSteps$meanOfSteps ~ avgSteps$interval | avgSteps$weekdays,
layout = c(1, 2), type = "l",
xlab = "5-min Interval", ylab = "Number of steps")
xyplot(avgSteps$meanOfSteps ~ avgSteps$interval | avgSteps$weekdays,
layout = c(1, 2), type = "l",
xlab = "5-min Interval", ylab = "Number of steps")
print(xtable(table(fixedData$weekdays)), type = "html", include.rownames = FALSE)
getwd()
setwd("../../RepData_PeerAssessment1")
getwd()
fixedData <- data
for (i in 1:nrow(fixedData)) {
if (is.na(fixedData$steps[i])) {
fixedData$steps[i] <- averages[which(fixedData$interval[i] == averages$interval), ]$meanOfSteps
}
}
head(fixedData)
for (i in 1:nrow(fixedData)) {
if (is.na(fixedData$steps[i])) {
fixedData$steps[i] <- averages[which(fixedData$interval[i] == averages$interval), ]$meanOfSteps
}
}
rm(list=ls())
